// Generated by LiveScript 1.3.1
(function(){
  var root, votes_in_order, get_vote, get_remaining_candidates, list_candidate_votes, get_candidate_with_fewest_votes, main;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  votes_in_order = function(line){
    var output, i$, ref$, len$, x;
    output = [];
    for (i$ = 0, len$ = (ref$ = ['First choice', 'Second choice', 'Third choice', 'Fourth choice', 'Fifth choice']).length; i$ < len$; ++i$) {
      x = ref$[i$];
      output.push(line[x]);
    }
    return output;
  };
  get_vote = function(line){
    var i$, ref$, len$, vote;
    for (i$ = 0, len$ = (ref$ = votes_in_order(line)).length; i$ < len$; ++i$) {
      vote = ref$[i$];
      if (vote === '') {
        continue;
      }
      if (root.blacklist[vote] != null) {
        continue;
      }
      return vote;
    }
    return null;
  };
  get_remaining_candidates = function(){
    var output, i$, ref$, len$, x;
    output = [];
    for (i$ = 0, len$ = (ref$ = root.all_candidates).length; i$ < len$; ++i$) {
      x = ref$[i$];
      if (root.blacklist[x] == null) {
        output.push(x);
      }
    }
    return output;
  };
  list_candidate_votes = function(csv){
    var output, i$, ref$, len$, candidate, line, vote;
    output = {};
    for (i$ = 0, len$ = (ref$ = get_remaining_candidates()).length; i$ < len$; ++i$) {
      candidate = ref$[i$];
      output[candidate] = 0;
    }
    for (i$ = 0, len$ = csv.length; i$ < len$; ++i$) {
      line = csv[i$];
      vote = get_vote(line);
      if (vote == null) {
        continue;
      }
      output[vote] += 1;
    }
    return output;
  };
  get_candidate_with_fewest_votes = function(candidate_votes){
    var min_votes, candidate_with_fewest_votes, candidate, votes;
    min_votes = Number.MAX_VALUE;
    candidate_with_fewest_votes = null;
    for (candidate in candidate_votes) {
      votes = candidate_votes[candidate];
      if (votes < min_votes) {
        min_votes = votes;
        candidate_with_fewest_votes = candidate;
      }
    }
    return candidate_with_fewest_votes;
  };
  main = function(){
    var loader, csv, all_candidates_set, i$, len$, line, j$, ref$, len1$, x, round_num, candidate_votes, eliminated_candidate, candidate_list;
    loader = require('csv-load-sync');
    csv = loader('Name voting.csv');
    root.all_candidates = [];
    all_candidates_set = {};
    for (i$ = 0, len$ = csv.length; i$ < len$; ++i$) {
      line = csv[i$];
      for (j$ = 0, len1$ = (ref$ = votes_in_order(line)).length; j$ < len1$; ++j$) {
        x = ref$[j$];
        if (x != null && x !== '' && all_candidates_set[x] == null) {
          all_candidates_set[x] = true;
          root.all_candidates.push(x);
        }
      }
    }
    root.blacklist = {};
    round_num = 1;
    for (;;) {
      console.log('============================');
      console.log('Round ' + round_num);
      console.log('Remaining candidates:');
      console.log(JSON.stringify(get_remaining_candidates()));
      candidate_votes = list_candidate_votes(csv);
      console.log('Votes:');
      console.log(JSON.stringify(candidate_votes));
      eliminated_candidate = get_candidate_with_fewest_votes(candidate_votes);
      console.log('Candidate eliminated: ' + eliminated_candidate);
      root.blacklist[eliminated_candidate] = true;
      candidate_list = Object.keys(candidate_votes);
      round_num += 1;
      if (candidate_list.length <= 1) {
        console.log('Winner: ' + candidate_list[0]);
        return;
      }
    }
  };
  main();
}).call(this);
